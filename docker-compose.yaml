version: "3"

services:
  app:
    # кастомное имя сервиса
    container_name: app
    # Этим ключом мы скажем docker-compose, чтобы он собирал Dockerfile, который
    # находится в папке рядом с docker-compose.yaml
    build:
      context: .
    # Зависимость от сервиса postgres
    depends_on:
      - postgres
    # Проброс порта так же, как в командной строке — на какой порт хоста какой порт контейнера
    ports:
      - "5000:5000"
    restart: always
    env_file:
      - ./dev.env
    # Важно добавить сеть всем сервисам, которые должны взаимодействовать между собой
    networks:
      - awesome
    command: ./wait-for.sh postgres:5432 -- npx ts-node --transpile-only index.ts
  postgres:
    container_name: postgres
    image: postgres:12
    ports:
      - "5432:5432"
    # Проброс файлов, откуда с хоста, куда в контейнер
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
    restart: always
    # путь к переменным окружения
    env_file:
      - ./dev.env
    networks:
      - awesome
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - awesome

volumes:
  pgadmin-data:

networks:
  awesome:
    driver: bridge
